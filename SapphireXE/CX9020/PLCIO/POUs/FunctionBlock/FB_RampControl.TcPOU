<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_RampControl" Id="{301020d1-2165-4317-92c4-138b5bbd2bad}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_RampControl
VAR_INPUT
	bPause: BOOL;
	bReStart: BOOL;
	bStop: BOOL;
END_VAR
VAR_OUTPUT
	fyValue: REAL;
END_VAR
VAR_IN_OUT
	fSetValue: REAL;
	fSetRamp: REAL;
END_VAR
VAR
	Timer: TON;
	Step: INT;
	fSetValue_Copy: REAL;
	fSetRamp_Copy: REAL;
	fyValue_Copy: REAL;
	fRamp_Inc: REAL;
	fPause_SetValue_Copy: REAL;
	fPause_Ramp_Copy: REAL;
	isPaused: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Timer();

(*사용자가 bPause버튼을 누르면 Ramp 멈추고 현재 값으로 유지*)
IF bPause = TRUE THEN
	IF isPaused = FALSE THEN
		fPause_Ramp_Copy :=	ABS( fSetRamp_Copy - fRamp_Inc);
		fPause_SetValue_Copy :=	fSetValue_Copy;
		fSetRamp := 0;
		fSetValue := fyValue;
		isPaused := TRUE;
	END_IF;
END_IF;

(*사용자가 bStop버튼을 누르면 Ramp 멈추고 현재 값으로 유지*)
IF bStop = TRUE THEN
	fSetRamp :=	0;
	fSetValue := fyValue;
END_IF;

(*bReStart 버튼을 누르면 재시작됨 *)
IF bReStart = TRUE THEN
	IF isPaused = TRUE THEN(*Puase 버튼이 정상적으로 눌린 경우만 *)
		fSetValue := fPause_SetValue_Copy;
		fSetRamp :=	fPause_Ramp_Copy;
		isPaused :=	FALSE;
		bReStart := FALSE;
		bPause := FALSE;
	END_IF;
END_IF;

//Ramp Process
CASE Step OF
	0:(*Input Change?*)
		IF	fSetValue_Copy	<>	fSetValue	THEN
			Step := 20;
		ELSE
			Step := 10;
		END_IF;

	10:(*Ramp Change?*)
		IF	fSetRamp_Copy <> fSetRamp		THEN
			Step := 20;
		ELSE
			Step := 0;
		END_IF;

	20:(*Input buf 저장*)
		fSetValue_Copy := fSetValue	;
		fSetRamp_Copy := fSetRamp;
		fyValue_Copy := fyValue;
		Step := 30;

	30: //Ramp Value Check
		IF fSetRamp	= 0	THEN
			fyValue := fSetValue_Copy;
			Step :=	0;
		ELSE
			Step :=	40;
		END_IF;

	40: //Ramp Variable Init
		fRamp_Inc := 0;
		Step :=	50;
		Timer.PT :=	T#1000MS;
		Timer.IN := FALSE;
		isPaused := FALSE;

	50:(*Timer*)
		Timer.IN := TRUE;

		IF Timer.Q = TRUE THEN(* Timer 1초가 되면 진행 *)
			Timer.IN := FALSE;
			fRamp_Inc := fRamp_Inc + 1;   (*Ramp 1초 증가  시킴*)
			fyValue	:=	fyValue + ((fSetValue_Copy   - fyValue_Copy ) / fSetRamp_Copy);  (*1초에 한번씩 output 증가 시킴*)

			IF fyValue <=0 THEN(*계산후 output 이 0 이하면 0으로 처리함*)
				fyValue := 0;
			END_IF;

			(*Ramp 종료 check*)
			IF fRamp_Inc >= fSetRamp THEN
				Step := 0;
			ELSE(*Ramp 변경??*)
				IF fSetRamp_Copy <> fSetRamp THEN
						(**???????????????????????????????????????????????????*)
					IF	fSetRamp <= 0 THEN
						Step := 0;
					ELSE
						fSetValue_Copy := fSetValue;
						fSetRamp_Copy := fSetRamp;
						fyValue_Copy := fyValue;
						Step := 40;
					END_IF;
				ELSE
					IF fSetValue_Copy <> fSetValue THEN(*Input 변경??*)
					fSetValue_Copy := fSetValue;
					fyValue_Copy := fyValue;
						IF fSetRamp	= 0 THEN
							Step := 0;
						ELSE
							Step := 40;
						END_IF;
					ELSE(*ramp Input 둘다 변경 없으면 Inc만 증가*)
						Step := 50;
					END_IF;
				END_IF;
			END_IF;
		END_IF;
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="FB_RampControl">
      <LineId Id="33" Count="108" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>