<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="P13_LineHeater" Id="{39a0ad06-755a-4fd9-b8ed-65d02fe2261a}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P13_LineHeater
VAR_INPUT
	rTemperatureSV 		: ARRAY[1..8]OF REAL;
	bAutoTuneSV 		: ARRAY[1..8]OF BOOL;
END_VAR
VAR_OUTPUT
	rTemperaturePV 		: ARRAY[1..8]OF REAL;
	isLineHeater_Run	: ARRAY[1..8]OF BOOL;
	isLineHeater_ATune	: ARRAY[1..8]OF BOOL;
	isLineHeater_Err	: ARRAY[1..8]OF BOOL;
END_VAR
VAR
	TimeOnDelay			: TON; //Time delay after Power ON of Thermal Bath
	TimeCycle			: TON;
	nComMode 			: INT; // //1 = PV Req, 2 = STATUS Req, 3 = SV Write, 4 = AutoTune On/Off
	nCount 				: INT;
	rTemperatureTV 		: ARRAY[1..8]OF REAL;
	bAutoTuneTV			: ARRAY[1..8]OF BOOL;

	//for sending variable
	TimeWaitSend		: TON;
	bSendingEnable 		: BOOL:=TRUE; // Check the Sending Stage
	bSetValueMode 		: BOOL;
	fbSend				: SendString;
	sSendString 		: STRING;
	bSendBusy			: BOOL;
	bSendingOK 			: BOOL; //v1
	eSendErrorID		: ComError_t;
	
	// for received variable
	TimeWaitReceive		:TON;
	fbReceive			: ReceiveString;
	sReceivedString		: STRING;
	bStringReceived		: BOOL;
	bReceiveBusy		: BOOL;
	bReceiveError		: BOOL;
	eReceiveErrorID		: ComError_t;
	bReceiveTimeout		: BOOL;
	bReceivedOK 		: BOOL;
	hStrReceivedST		: STRING;
	hStrReceivedPV		: STRING;
	
	nHeaterNumber 		: INT := 1;
	sHeaterNumber 		: STRING := '1';
	sReceivedHeaterNumber : STRING;
	nReceivedHeaterNumber : INT;
	sReceivedAffirmation : STRING;
	sReceivedData 		: STRING;
	nHeaterStrPositionPV : INT:= 11; //Received String Start Position
	nDecimal			:INT;
	nSendStrCounter		:INT := 1;
	bReset : BOOL;
	sTest : STRING;
	nStrPosition : INT;
	nHeaterNumberPV : INT;
	sTemperaturePV : STRING;
	(* Input *)
	bLineHeaterCB		: BOOL;
	bLineHeaterCP		: BYTE;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//LH: Line Heater x 8EA -> 8Channel TIC 1EA
//Maker: HANYOUNG NUX
//Model: MC9-8RD0SS32
//Temp Range: -15 ~200℃
//RS485: 9600, DataBit(8), Parity(None), StopBit(1)
//BCC Check X

(* Read from Device Value *)
// Line Heater CP
bLineHeaterCB	:= GVL_IO.aDigitalInputIO[5].2;
bLineHeaterCP 	:= GVL_IO.aDigitalInputIO[6]; //LineHeaterCP1   := bLineHeaterCP.0, Until CP8

// make a sending string
TimeOnDelay(IN:= P90_Interlock.bLineHeaterMC, PT :=T#5S); //Time Delay after a Thermal Bath MC ON
IF TimeOnDelay.Q THEN
	TimeOnDelay(IN:=FALSE);
	// Make a sending string Set value or Request value 
	IF bSendingEnable = FALSE THEN
		bSendingEnable := TRUE;
		bSendingOK := FALSE;
		bReceivedOK := FALSE;
		
		IF nComMode <>1 THEN
			sSendString := '$0201DRS,08,0001$0D$0A'; //Request PV
			nComMode := 1;
		ELSE
			sSendString := '$0201DRS,08,0111$0D$0A'; //Request State
			nComMode := 2;
		END_IF
	
		FOR nHeaterNumber:= 1 TO 8 DO
			IF (rTemperatureTV[nHeaterNumber] <> rTemperatureSV[nHeaterNumber]) THEN
				// if SetValue are different to TargetValue, change Target vale to setvalue
				rTemperatureTV[nHeaterNumber] := rTemperatureSV[nHeaterNumber];
				sSendString := Real_To_String_LineHeater(rTemperatureTV[nHeaterNumber]*10, nHeaterNumber); //Move the decimal point by 1
			END_IF
			IF (bAutoTuneSV[nHeaterNumber] <> bAutoTuneTV[nHeaterNumber]) THEN
				bAutoTuneTV[nHeaterNumber] := bAutoTuneSV[nHeaterNumber];
				sSendString := BOOL_TO_STRING_LHeaterON(nHeaterNumber,bAutoTuneTV[nHeaterNumber]);
			END_IF
			
			TimeWaitSend(IN:=TRUE, PT:=T#10MS);
			IF TimeWaitSend.Q THEN
				TimeWaitSend(IN:=FALSE);
				IF fbSend.Busy THEN
					fbSend(	SendString:= sSendString,
						TXbuffer:= TxBufferLH,
						Busy=> bSendBusy,
						Error=> );
					IF fbSend.Error <> COMERROR_NOERROR THEN
						eSendErrorID := fbSend.Error;
						bSendingOK := FALSE;
					ELSE
						eSendErrorID := COMERROR_NOERROR;
						bSendingOK := TRUE;
					END_IF
				END_IF
			END_IF

		END_FOR
		
	END_IF
	
	TimeWaitSend(IN:=bSendingEnable AND bSendingOK = FALSE, PT:=T#10MS);
	IF TimeWaitSend.Q OR fbSend.Busy THEN
		bSendingOK := TRUE;
		fbSend(
			SendString := sSendString,
			TXBuffer := TXBufferLH,
			Busy => bSendBusy,
			Error =>
			);
		IF fbSend.Error <> COMERROR_NOERROR THEN
			eSendErrorID := fbSend.Error;
			bSendingOK := FALSE;
		ELSE
			bSendingOK := TRUE;
			bSendingOK := TRUE;
		END_IF
	END_IF
	
	fbReceive(
		Prefix := '$02',
		Suffix:= '$0D$0A',
		Timeout:= T#1S,
		ReceivedString:= sReceivedString,
		RXbuffer:=RXbufferLH,
		StringReceived=> bStringReceived,
		Busy=> bReceiveBusy,
		Error=>
		);
	IF bStringReceived THEN
		bStringReceived := FALSE;
		bReceivedOK:= TRUE;
		
		IF nComMode =1 THEN
			nStrPosition := 11;			
			FOR nHeaterNumber := 1 TO 8 DO
				hStrReceivedPV := MID(STR:=sReceivedString, LEN:=4, POS:=nStrPosition);
				rTemperaturePV[nHeaterNumber] := (HEXSTR_TO_REAL_LHeaterPV(hStrReceivedPV))/10; //Move the decimal point by 1
				nStrPosition := nStrPosition + 5;
			END_FOR
		ELSE
			nStrPosition := 11;		
			FOR nHeaterNumber := 1 TO 8 DO
				hStrReceivedST := MID(STR:=sReceivedString, LEN:=4, POS:=nStrPosition);						
				IF hStrReceivedST = '0002' THEN
					isLineHeater_Run[nHeaterNumber] 	:= TRUE;
					isLineHeater_ATune[nHeaterNumber] 	:= FALSE;
					isLineHeater_Err[nHeaterNumber] 	:= FALSE;
				ELSIF hStrReceivedST = '0004' THEN
					isLineHeater_Run[nHeaterNumber] 	:= FALSE;
					isLineHeater_ATune[nHeaterNumber] 	:= TRUE;
					isLineHeater_Err[nHeaterNumber] 	:= FALSE;
				ELSIF hStrReceivedST = '0080' THEN
					isLineHeater_Run[nHeaterNumber] 	:= FALSE;
					isLineHeater_ATune[nHeaterNumber] 	:= FALSE;
					isLineHeater_Err[nHeaterNumber] 	:= TRUE;
				ELSE
					isLineHeater_Run[nHeaterNumber] 	:= FALSE;
					isLineHeater_ATune[nHeaterNumber] 	:= FALSE;
					isLineHeater_Err[nHeaterNumber] 	:= FALSE;
				END_IF
				nStrPosition := nStrPosition + 5;		
			END_FOR
		END_IF
	END_IF
	
	TimeWaitReceive(IN:=bReceivedOK,PT:=T#1S);
	TimeCycle(IN:=TRUE, PT:=T#2S);
	IF TimeWaitReceive.Q OR TimeCycle.Q THEN
		TimeWaitReceive(IN:= TRUE);
		TimeCycle(IN:= FALSE);
		bSendingEnable := FALSE;
	END_IF
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="P13_LineHeater">
      <LineId Id="61" Count="5" />
      <LineId Id="254" Count="0" />
      <LineId Id="251" Count="1" />
      <LineId Id="315" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="253" Count="0" />
      <LineId Id="68" Count="123" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>