<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="backup2" Id="{85eb8266-9061-428c-8915-858dfe5b153d}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P50_RecipeControl2
VAR_INPUT

END_VAR
VAR
	nRcpIndex		: INT :=1;
	nRcpStepTime 	: INT;
	tMoveNext 		: TON;
	bMoveNext		: BOOL;
	rTrigMoveNext	: R_TRIG;
	fbRecipeSequencer : FB_RecipeSequencer;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE RCP.iRcpOperationState OF
	0: //Initial Operation Setting
	10: //RUN
		//Initial State
		IF (RCP.bRcpStart) THEN //레시피 시작 조건 추가예정
			nRcpIndex := 1;
			//RCP.bRcpStart := FALSE;
			RCP.iRcpStepN := nRcpIndex;
			nRcpStepTime := RCP.aRecipe[nRcpIndex].iRecipe[2] + RCP.aRecipe[nRcpIndex].iRecipe[3]; // Recipe Step Time
			// Recipe Write to Device
			fbRecipeSequencer(nRcpIndex := nRcpIndex);
			bMoveNext := TRUE;
			tMoveNext(IN:=bMoveNext, PT:=INT_TO_TIME(nRcpStepTime*1000));
			rTrigMoveNext(CLK:=tMoveNext.Q);
			IF rTrigMoveNext.Q THEN
				RCP.bRcpStart := FALSE;
				bMoveNext := FALSE;
				tMoveNext(IN := FALSE);
				nRcpIndex := nRcpIndex + 1;
			END_IF
		END_IF
		//2nd Step to EOR(End of Recipe)-1 Step State
		IF RCP.bRcpStart = FALSE AND nRcpIndex <> 1 AND nRcpIndex < RCP.iRcpTotalStep THEN
			RCP.iRcpStepN := nRcpIndex;
			nRcpStepTime := RCP.aRecipe[nRcpIndex].iRecipe[2] + RCP.aRecipe[nRcpIndex].iRecipe[3]; // Recipe Step Time
			// Recipe Write to Device
			fbRecipeSequencer(nRcpIndex := nRcpIndex);
			bMoveNext := TRUE;
			tMoveNext(IN:=bMoveNext, PT:=INT_TO_TIME(nRcpStepTime*1000));
			rTrigMoveNext(CLK:=tMoveNext.Q);
			IF rTrigMoveNext.Q THEN
				bMoveNext := FALSE;
				tMoveNext(IN := FALSE);
				nRcpIndex := nRcpIndex + 1;
			END_IF
		END_IF
		// EOR(End of Recipe)
		IF RCP.bRcpStart = FALSE AND RCP.iRcpStepN = RCP.iRcpTotalStep THEN
			RCP.iRcpStepN := nRcpIndex;
			nRcpStepTime := RCP.aRecipe[nRcpIndex].iRecipe[2] + RCP.aRecipe[nRcpIndex].iRecipe[3]; // Recipe Step Time
			// Recipe Write to Device
			fbRecipeSequencer(nRcpIndex := nRcpIndex);
			bMoveNext := TRUE;
			tMoveNext(IN:=bMoveNext, PT:=INT_TO_TIME(nRcpStepTime*1000));
			rTrigMoveNext(CLK:=tMoveNext.Q);
			IF rTrigMoveNext.Q THEN
				bMoveNext := FALSE;
				tMoveNext(IN := FALSE);
				// Satety State 전달
			END_IF
		END_IF	
	20: //PAUSE
	30: //RESTART
	40: //STOP
		RCP.bRcpStart := FALSE;
		nRcpIndex := RCP.iRcpTotalStep;
		nRcpStepTime := RCP.aRecipe[nRcpIndex].iRecipe[2] + RCP.aRecipe[nRcpIndex].iRecipe[3]; // Recipe Step Time
		// Recipe Write to Device
		fbRecipeSequencer(nRcpIndex := nRcpIndex);
		bMoveNext := TRUE;
		tMoveNext(IN:=bMoveNext, PT:=INT_TO_TIME(nRcpStepTime*1000));
		rTrigMoveNext(CLK:=tMoveNext.Q);
		IF rTrigMoveNext.Q THEN
			bMoveNext := FALSE;
			tMoveNext(IN := FALSE);
			// Satety State 전달
		END_IF
	50: //END
		//Safety State 
END_CASE

]]></ST>
    </Implementation>
    <LineIds Name="backup2">
      <LineId Id="1" Count="71" />
    </LineIds>
  </POU>
</TcPlcObject>