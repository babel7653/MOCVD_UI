<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="FB_SensorLimitCheck" Id="{4d2bc06a-4128-42bb-b80a-96542ccb9bd1}" SpecialFunc="None">
    <Declaration><![CDATA[//*********************************************************************
// Function Block: FB_SensorLimit
// Description: 각 디바이스의 범위 초과 알람을 처리합니다.
// bEnable이 TRUE일 때만 알람 로직이 활성화됩니다.
//*********************************************************************
FUNCTION_BLOCK FB_SensorLimitCheck
VAR_INPUT
	bAlarmEnable	: BOOL; //디바이스 활성화/비활성화 (TRUE = 활성화)
	bWarningEnable	: BOOL;
	fCurrentValue 	: REAL; //현재값
	fAlarmTreshold	: REAL; //알람 허용 임계값
	fWarningTreshold : REAL; //경고 허용 임계값
	tAlarmDelay		: TIME; //지연 시간
END_VAR
VAR_OUTPUT
	bLimitAlarm		: BOOL; //허용 값 초과 경고 발생
	bLimitWarning	: BOOL; //허용 값 초과 주의 발생
END_VAR
VAR
	// 내부 변수 (인스턴스별로 독립적)
	fbLimitAlarmTimer 		: TON;
	fbLimitWarningTimer 	: TON;
 	bLimitAlarmCondition 	: BOOL;
	bLimitWarningCondition 	: BOOL; 
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// bAlarmEnable이 TRUE일 때만 알람 로직 실행
IF bAlarmEnable THEN
	//허용값 알람 로직(지연 시간 적용)
	IF fCurrentValue < fAlarmTreshold THEN
		bLimitAlarmCondition := TRUE;
	ELSE
		bLimitAlarmCondition := FALSE;
	END_IF
	fbLimitAlarmTimer(IN:=bLimitAlarmCondition, PT:=tAlarmDelay);
	bLimitAlarm := fbLimitAlarmTimer.Q;
ELSE
	// bEnable이 FALSE일 경우, 모든 알람 및 타이머를 비활성화/리셋
    // Q 출력을 FALSE로 강제하고, IN 입력을 FALSE로 설정하여 타이머를 리셋합니다.
	bLimitAlarm := FALSE;
	fbLimitAlarmTimer(IN := FALSE, PT := tAlarmDelay); // 타이머 리셋
	bLimitAlarmCondition := FALSE; // 조건 플래그도 리셋
END_IF

// bWarningEnable이 TRUE일 때만 알람 로직 실행
IF bWarningEnable THEN
	//허용값 주의 로직(지연 시간 적용)
	IF (fCurrentValue < fWarningTreshold) AND (fCurrentValue >= fAlarmTreshold ) THEN
		bLimitWarningCondition := TRUE;
	ELSE
		bLimitWarningCondition := FALSE;
	END_IF
	fbLimitWarningTimer(IN:=bLimitWarningCondition, PT:=tAlarmDelay);
	bLimitWarning := fbLimitWarningTimer.Q;
ELSE
	// bEnable이 FALSE일 경우, 모든 알람 및 타이머를 비활성화/리셋
    // Q 출력을 FALSE로 강제하고, IN 입력을 FALSE로 설정하여 타이머를 리셋합니다.
	bLimitWarning := FALSE;
	fbLimitWarningTimer(IN := FALSE, PT := tAlarmDelay); // 타이머 리셋
	bLimitWarningCondition := FALSE; // 조건 플래그도 리셋
END_IF]]></ST>
    </Implementation>
    <LineIds Name="FB_SensorLimitCheck">
      <LineId Id="1" Count="34" />
    </LineIds>
  </POU>
</TcPlcObject>