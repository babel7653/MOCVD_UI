<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.12">
  <POU Name="P12_IQ_PLUS" Id="{e511b755-5d71-4ab9-9c97-639ef910a29b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P12_IQ_PLUS
VAR
	wControlValue 		: WORD := 760;//Pressure Set Value
	wCDG1_PV 			: WORD; //CD2 Current Pressure
	wCDG2_PV 			: WORD; //CD2 Current Pressure
	bVacuumPumpCB		: BOOL;
	bThrottleValveCP	: BOOL;

	//nInputStatus
	ingPressureControl 		: BOOL;
	ingPositionControl 		: BOOL;
	isValveOpen 			: BOOL;
	isValveNotInitialized 	: BOOL;	
	isValveClosed 			: BOOL;
	isValveFaultState 		: BOOL;
	ingValveInitializing 	: BOOL;
	ingHoldState 			: BOOL;
	
	// Vacuum Pump Status
	isPumpFault				: BOOL;
	isPumpWarning			: BOOL;
	isPumpAlarm				: BOOL;
	isFBRunning				: BOOL;
// 	isPumpRunning			: BOOL;
	//wSetPoint 			: WORD; //Set Point
	nTValveMode 		: USINT := 0; //Valve Mode
	bPumpOn				: BOOL;
	bPumpReset			: BOOL;	//Input from IQ-PLUS Throttle Valve
	
	nInputStatus AT %I* : USINT; //Input Status Bytes
	aInputPressurePV_CDG1 AT %I* : ARRAY[1..2]OF USINT; //CDG1 Pressure
	aInputPressurePV_CDG2 AT %I* : ARRAY[1..2]OF USINT; //CDG2 Pressure
	aInputPressureSP AT %I* : ARRAY[1..2]OF USINT; //Set Point Pressure
	aInputValvePosionPV AT %I* : ARRAY[1..2]OF USINT; //Current Valve Position
	
	wTypedControlValue 	: WORD;
	wOutputSVBytes : outWord; //Word to Byte variable
	nSetType 			: USINT; //1:Pressure Conrol, 2:Position Control
	
	//Output to IQ-PLUS Throttle Valve
	nOutputMode AT %Q* : USINT;
	aOutputSVBytes AT %Q* : ARRAY[1..2]OF USINT; //Set Pressure
	nOutputSetType AT %Q* : USINT; //1:Pressure Control, 2:Valve Position Control

	wByteCDG1_PV 			: WORD; //CDG1 Current Pressure, Not Used
	wByteCDG2_PV 			: WORD; //CDG2 Current Pressure
	wByteValvePosition_PV : WORD; //Current Valve Position (0~100%)
	nInputStatusOld : USINT := 9; //Value Change Monitoring, First Temp value
END_VAR

VAR CONSTANT
	//Conversion Parameter
	SetPointFactor : REAL := 327.67; //Range 0~7FFFh
	PressureFactor : REAL := 24.576;	//Range 0~6000h
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Model : IQ Plus 
//Pressure Range : 0 ~ 1,000 Torr
IF GVL_IO.aOutputCmd[1].12 THEN // Pressure Mode Setting
	nOutputSetType := 1; // Pressure Control
ELSE
	nOutputSetType := 2; // Position Control
END_IF

(* Command *)
bPumpOn 			:= GVL_IO.aOutputCmd[1].6;
bPumpReset 			:= GVL_IO.aOutputCmd[1].7;

(* Read from Power Distribution Pannel *)
bVacuumPumpCB		:= GVL_IO.aDigitalInputIO[5].1;
bThrottleValveCP 	:= GVL_IO.aDigitalInputIO[5].5; //Throttle Valve CP

(* Read from Vacuum Pump *)
isPumpFault			:= GVL_IO.aDigitalInputIO[2].7;
isPumpWarning		:= GVL_IO.aDigitalInputIO[3].0;
isPumpAlarm			:= GVL_IO.aDigitalInputIO[3].1;
isFBRunning			:= GVL_IO.aDigitalInputIO[3].2;
// isPumpRunning		:= GVL_IO.aDigitalInputIO[3].3;

(* Read from Device Value *)
// 2USINT to WORD
wByteCDG1_PV 		:= USINT_TO_WORD_Bit(aInputPressurePV_CDG1[1],aInputPressurePV_CDG1[2]);
wByteCDG2_PV 		:= USINT_TO_WORD_Bit(aInputPressurePV_CDG2[1],aInputPressurePV_CDG2[2]);
wByteValvePosition_PV 	:= USINT_TO_WORD_Bit(aInputValvePosionPV[1], aInputValvePosionPV[2]);
wControlValue		:= GVL_IO.wIqPlus_CV;

//From IQ Plus
// wCDG1_PV 			:= REAL_TO_WORD(wByteCDG1_PV/PressureFactor);
// wCDG2_PV 			:= REAL_TO_WORD(wByteCDG2_PV/PressureFactor);
GVL_IO.wIqPlus_CDG1_PV 	:= REAL_TO_WORD(wByteCDG1_PV/PressureFactor);
GVL_IO.wIqPlus_CDG2_PV 	:= REAL_TO_WORD(wByteCDG2_PV/PressureFactor);

//To IQ Plus
nOutputMode := WORD_TO_USINT(GVL_IO.aOutputCmd[2]); //Throttle Valve Mode Setting 0:Normal 1:Close 2:Open 3:Hold 4:Reset
IF nOutputMode = 0 AND nSetType = 1 THEN
	wTypedControlValue := REAL_TO_WORD(wControlValue * SetPointFactor * 0.1); //Pressure Control
ELSIF nOutputMode = 0 AND nSetType = 2 THEN
	wTypedControlValue := REAL_TO_WORD(wControlValue * SetPointFactor); // Position Control
END_IF

wOutputSVBytes 		:= WORD_TO_USINT_Bit(wTypedControlValue);
aOutputSVBytes[1] 	:= wOutputSVBytes.Lower;
aOutputSVBytes[2] 	:= wOutputSVBytes.Upper;

//Valve Status Initailize
IF nInputStatus <> nInputStatusOld THEN
	// Staus Initializing
	ingPressureControl := FALSE;
	ingPositionControl := FALSE;
	isValveOpen := FALSE;
	isValveNotInitialized := FALSE;	
	isValveClosed := FALSE;
	isValveFaultState := FALSE;
	ingValveInitializing := FALSE;
	ingHoldState := FALSE;
	// Status Update	
	nInputStatusOld := nInputStatus;
END_IF

//Update Valve Status
CASE nInputStatus OF
	0 : ingPressureControl := TRUE; //Pressure Control Performing.
	1 : ingPositionControl := TRUE; //Position Control Performing.	
	2 : isValveOpen := TRUE; //Valve Open, Stopped, Not Controlling.
	3 : isValveNotInitialized := TRUE; //Valve not initialized power on or RESET Command.
	4 : isValveClosed := TRUE; //Valve Closed, Stopped, Not Controlling.
	5 : isValveFaultState := TRUE; //Has faulted during valve initialization or operation.
	6 : ingValveInitializing := TRUE; //Initailizing Process.
	8 : ingHoldState := TRUE; //intermediate position, not at open or close and not controlling pressure.
END_CASE

// nOutputMode
// 0 : uses setpoint and setpoint type to control the valve.
// 1 : Does not use setpoint and setpoint type to operate the valve.
// 2 : Does not use setpoint and setpoint type to operate the valve.
// 3 : Holds valve in current position.
// 4 : Reset the controller.

GVL_IO.nIQPLUS_SetType 	:= nOutputSetType;
GVL_IO.nIQPLUS_Mode 	:= nOutputMode;

GVL_IO.aMonitoring_PV[11] := wByteValvePosition_PV/SetPointFactor;
GVL_IO.aDigitalOutputIO[2].2 := bPumpOn; //Pump On
GVL_IO.aDigitalOutputIO[2].3 := bPumpReset; // Pump Reset
GVL_IO.isPumpRunning := GVL_IO.aDigitalInputIO[3].3;
]]></ST>
    </Implementation>
    <LineIds Name="P12_IQ_PLUS">
      <LineId Id="273" Count="1" />
      <LineId Id="367" Count="1" />
      <LineId Id="370" Count="1" />
      <LineId Id="369" Count="0" />
      <LineId Id="389" Count="0" />
      <LineId Id="384" Count="0" />
      <LineId Id="392" Count="0" />
      <LineId Id="390" Count="0" />
      <LineId Id="393" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="288" Count="1" />
      <LineId Id="279" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="52" Count="3" />
      <LineId Id="378" Count="0" />
      <LineId Id="56" Count="1" />
      <LineId Id="379" Count="3" />
      <LineId Id="361" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="376" Count="0" />
      <LineId Id="63" Count="9" />
      <LineId Id="75" Count="32" />
      <LineId Id="399" Count="1" />
      <LineId Id="397" Count="0" />
      <LineId Id="372" Count="0" />
      <LineId Id="364" Count="0" />
      <LineId Id="287" Count="0" />
      <LineId Id="293" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="401" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>