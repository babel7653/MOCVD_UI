<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="P30_ManualControl" Id="{98ee4f4f-99e9-426e-9dfa-55ddf51d552b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P30_ManualControl
VAR
	i 	: INT;
	j	: INT; //Index of Controller
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Read and Write from Gas Control Device - MFC, EPC *)
FOR i:=1 TO 26 DO
	IF GVL_IO.aMaxValueController[i] <> 0 THEN
		GVL_IO.aController[i].nState := 10;
		GVL_IO.aController[i].nRampTime := GVL_IO.aController_RampTime[i];
		GVL_IO.aController[i].rTargetValue := GVL_IO.aController_TV[i] / GVL_IO.aMaxValueController[i] * GVL_IO.KL3464MaxValueH; //Input Set Value
		GVL_IO.aAnalogOutputIO[i] := LREAL_TO_INT(GVL_IO.aController[i].rControlValue); //Write to Device
		
		GVL_IO.aController_PV[i] := REAL_TO_INT(GVL_IO.aAnalogInputIO[i] / GVL_IO.KL3464MaxValueH * GVL_IO.aMaxValueController[i]);
		GVL_IO.aController_CV[i] := LREAL_TO_INT((GVL_IO.aController[i].rControlValue / GVL_IO.KL3464MaxValueH)*GVL_IO.aMaxValueController[i]);
		GVL_IO.aController[i]();
	END_IF
END_FOR

(* Read and Write Temperature Cotnroller *)
FOR i:=27 TO 29 DO
	IF GVL_IO.aMaxValueController[i]<> 0 THEN
		GVL_IO.aController[i].nState := 10;
	END_IF
	
	CASE i OF
		27: // Induction Heater Controller
			IF ( GVL_IO.aController_CV[i] > 10 ) THEN
				P11_E3508.bHeaterOn := TRUE;  // PowerSupply Turn ON when ControlValue is 10 degrees or more
			ELSE
				P11_E3508.bHeaterOn := FALSE; // PowerSupply Turn OFF when ControlValue is below 10 degrees
			END_IF
			GVL_IO.aController[i].nRampTime := GVL_IO.aController_RampTime[i]; // from UI
			GVL_IO.aController[i].rTargetValue := GVL_IO.aController_TV[i]; // from UI
			P11_E3508.wControlValue := LREAL_TO_WORD(GVL_IO.aController[i].rControlValue); //Write to Temperature Controller
			
		28: // Reactor Pressure Controller
			GVL_IO.aController[i].nRampTime := GVL_IO.aController_RampTime[i]; // from UI
			GVL_IO.aController[i].rTargetValue := GVL_IO.aController_TV[i]; // from UI
			P12_IQ_PLUS.wControlValue := LREAL_TO_WORD(GVL_IO.aController[i].rControlValue); //Write to Pressure Controller
			
		29: // Susceptor Rotation Controller
	END_CASE
	

	
END_FOR 


]]></ST>
    </Implementation>
    <LineIds Name="P30_ManualControl">
      <LineId Id="1" Count="12" />
      <LineId Id="54" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="45" Count="0" />
      <LineId Id="49" Count="2" />
      <LineId Id="55" Count="3" />
      <LineId Id="53" Count="0" />
      <LineId Id="75" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="62" Count="2" />
      <LineId Id="69" Count="0" />
      <LineId Id="77" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="36" Count="2" />
    </LineIds>
  </POU>
</TcPlcObject>