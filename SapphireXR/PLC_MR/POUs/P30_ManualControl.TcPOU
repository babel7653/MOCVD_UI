<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="P30_ManualControl" Id="{98ee4f4f-99e9-426e-9dfa-55ddf51d552b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P30_ManualControl
VAR
	i 	: INT;
	j	: INT; //Index of Controller
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Read and Write from Gas Control Device - MFC, EPC *)
FOR i:=1 TO 26 DO
	IF GVL_IO.aMaxValueController[i] <> 0 THEN
		GVL_IO.aController[i].nState := 10;
		GVL_IO.aController[i].nRampTime := GVL_IO.aController_RampTime[i];
		GVL_IO.aController[i].rTargetValue := GVL_IO.aController_TV[i] / GVL_IO.aMaxValueController[i] * GVL_IO.KL3464MaxValueH; //Input Set Value
		GVL_IO.aAnalogOutputIO[i] := LREAL_TO_INT(GVL_IO.aController[i].rControlValue); //Write to Device
		
		GVL_IO.aController_PV[i] := REAL_TO_INT(GVL_IO.aAnalogInputIO[i] / GVL_IO.KL3464MaxValueH * GVL_IO.aMaxValueController[i]);
		GVL_IO.aController_SV[i] := LREAL_TO_INT((GVL_IO.aController[i].rControlValue / GVL_IO.KL3464MaxValueH)*GVL_IO.aMaxValueController[i]);
		GVL_IO.aController[i]();
	END_IF
END_FOR

(* Read and Write Temperature Cotnroller *)
i := 27; // Heater Controller 
	IF GVL_IO.aMaxValueController[i]<> 0 THEN
		GVL_IO.aController[i].nState := 10;
	END_IF	


IF ( GVL_IO.aController_SV[j] > 10 ) THEN
	P11_E3508.bHeaterOn := TRUE;
ELSE
	P11_E3508.bHeaterOn := FALSE;
END_IF
	
GVL_IO.aController[j].nRampTime := GVL_IO.aController_RampTime[j];
GVL_IO.aController[j].rTargetValue := GVL_IO.aController_TV[j];
P11_E3508.wControlValue := LREAL_TO_WORD(GVL_IO.aController[j].rControlValue); //Write to Temperature Controller

(* Read and Write Pressure Controller *)
j := 28; // Pressure Controller
IF (GVL_IO.aController_TV[j] >= 0 ) THEN
	GVL_IO.aController[j].nState := 10; //START
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="P30_ManualControl">
      <LineId Id="1" Count="37" />
    </LineIds>
  </POU>
</TcPlcObject>