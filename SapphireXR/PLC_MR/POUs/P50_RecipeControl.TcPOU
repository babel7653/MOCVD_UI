<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="P50_RecipeControl" Id="{e332a806-fd31-4290-a7c3-27f42c11d38e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P50_RecipeControl
VAR
	nRcpIndex		: INT;
	nRcpStepTime 	: INT;
	fbRecipeSequencer : FB_RecipeSequencer;
	Pause_TIME		: TIME;
	Pause_ET		: TIME;
	Pause_MAX		: TIME := T#1800S;
	Pause_Step		: INT;
	Pause_TON		: TON;
	Pause_rTrig		: R_TRIG;
	Pause_Ramp		: BOOL;
	Pause_Hold		: BOOL;
	ReStart_TON		: TON;
	Ramp_TON		: TON;
	Hold_TON		: TON;
	Ramp_TIME		: TIME;
	Hold_TIME		: TIME;
	Ramp_ET			: TIME;
	Hold_ET			: TIME;
	rTrigRamp		: R_TRIG;
	rTrigHold		: R_TRIG;
	rTrigLoop		: R_TRIG;
	rTrigWait		: R_TRIG;
	Ramp_On			: BOOL;
	Hold_On			: BOOL;
	Loop_On			: BOOL;
	Wait_On			: BOOL;
	
	loopCount	: ARRAY[1..100] OF INT;
	eRecipeRun		: E_RecipeRun := E_RecipeRun.Idle; //레시피 상태

	i				: INT;
	test_temp		: INT; //GVL_IO.aMonitoring_PV[10]
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE RCP.cmd_RcpOperation OF
	0: //Init State
		Rcp.state_RcpOperation := 0;
		nRcpIndex := 0;
		Pause_TON(IN:=FALSE);
		ReStart_TON(IN:=FALSE);
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		Ramp_On := TRUE;
		Hold_On	:= FALSE;
		Loop_On := FALSE;
		
		FOR i:=1 TO Rcp.iRcpTotalStep DO
			loopCount[i] := Rcp.aRecipe[i].iRecipe[9];
		END_FOR
		
		Rcp.userState := 0;
		eRecipeRun := E_RecipeRun.Initialize;
		GVL_IO.nCaseSignalTower := 5; // White - Idle

	10: //RUN
		IF nRcpIndex = 0 THEN
			nRcpIndex := 1;
		ELSE
			fbRecipeSequencer(nRcpIndex := nRcpIndex);
						
			// CASE 문을 이용한 상태 머신 구현
			CASE eRecipeRun OF
				E_RecipeRun.Idle: // 아무것도 하지 않음			
					;
					
				E_RecipeRun.Initialize:
					Rcp.userState := 10;
					Rcp.state_RcpOperation := 10; // Recipe Running
					Ramp_TIME := INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[2]*1000); // second -> milisecond time
					Hold_TIME := INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[3]*1000);
					GVL_IO.nCaseSignalTower := 3;
					eRecipeRun := E_RecipeRun.Ramp;
					
				E_RecipeRun.Ramp: // Ramp 수행
					Ramp_TON(IN:=TRUE, PT:=Ramp_TIME, ET=>Ramp_ET);
					rTrigRamp(CLK:=Ramp_TON.Q);
					IF rTrigRamp.Q THEN
						Ramp_TON(IN:=FALSE);
						//Ramp_On := FALSE;
						//Hold_On	:= TRUE;
						eRecipeRun := E_RecipeRun.CheckHoldTemp;
					END_IF				
					
				E_RecipeRun.CheckHoldTemp: //Hold Temp 확인
					IF RCP.aRecipe[nRcpIndex].iRecipe[7] = 0 THEN
						Hold_TON(IN:=TRUE, PT:=Hold_TIME, ET=>Hold_ET);
						rTrigHold(CLK:=Hold_TON.Q);
						IF rTrigHold.Q THEN
							Hold_TON(IN:=FALSE);
							eRecipeRun := E_RecipeRun.End; // 레시피 첫 Column 실행
						END_IF
					ELSIF GVL_IO.aController_PV[27] < RCP.aRecipe[nRcpIndex].iRecipe[7] THEN //서셉터 온도가 Wait 온도보다 낮을 때
						Hold_TON(IN:=FALSE);
						eRecipeRun := E_RecipeRun.End; // 레시피 첫 Column 실행
					ELSE // 서셉터 온도가 Wait 온도보다 높을 때
						;// 떨어질 때까지 기다림
					END_IF
					
				E_RecipeRun.End: // 다음 Step 이동 (루프 마지막 단계일 경우, 다음 Step 이동 또는 루프 처음단계로 점프)
					loopCount[nRcpIndex] := loopCount[nRcpIndex] - 1;
					nRcpIndex := nRcpIndex + 1 - (RCP.aRecipe[nRcpIndex].iRecipe[8]) * MIN(loopCount[nRcpIndex], 1);
					IF nRcpIndex > Rcp.iRcpTotalStep THEN
						RCP.cmd_RcpOperation := 50;
					END_IF
					eRecipeRun := E_RecipeRun.Initialize;
			END_CASE
		END_IF
		
	20: //PAUSE
		Rcp.state_RcpOperation := 20;
		
		IF Ramp_On THEN
 			Pause_TIME := Ramp_ET;
			Pause_Ramp := TRUE;
			Pause_Hold := FALSE;
		ELSE
			Pause_TIME := Hold_ET;
			Pause_Ramp := FALSE;
			Pause_Hold := TRUE;
 		END_IF
		
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		
		Pause_TON(IN:=TRUE, PT:= Pause_MAX, ET=> Pause_ET);
		Pause_rTrig(CLK:=Pause_TON.Q);
		IF Pause_rTrig.Q THEN
			Rcp.state_RcpOperation := 90; // Recipe_Alarm
			Pause_TON(IN:=FALSE);
		END_IF	
		Pause_Step := nRcpIndex;
		Rcp.userState := 20;
		GVL_IO.nCaseSignalTower := 5;
		
	30: //RESTART
		Rcp.state_RcpOperation := 30;	
		Pause_TON(IN:=FALSE);
		Rcp.userState := 10;
		IF Pause_Ramp THEN
			ReStart_TON(IN:=TRUE, PT:=Ramp_TIME - Pause_TIME, ET=>Ramp_ET);
			rTrigRamp(CLK:=ReStart_TON.Q);
			IF rTrigRamp.Q THEN
				Ramp_TON(IN:=FALSE);
				Ramp_On := FALSE;
				Hold_On := TRUE;
			END_IF
			
			Hold_TON(IN:=Hold_On, PT:=Hold_TIME, ET=>Hold_ET);
			rTrigHold(CLK:=Hold_TON.Q);
			IF rTrigHold.Q THEN
				Hold_TON(IN:=FALSE);
				Hold_On := FALSE;
				Ramp_On := TRUE;
				IF nRcpIndex < Rcp.iRcpTotalStep THEN
					nRcpIndex := nRcpIndex + 1;
					RCP.cmd_RcpOperation := 10;
				ELSE 
					RCP.cmd_RcpOperation := 50;
				END_IF
			END_IF
			
		ELSIF Pause_Hold THEN
			ReStart_TON(IN:=TRUE, PT:=Hold_TIME - Pause_TIME, ET=>Hold_ET);
			rTrigHold(CLK:=ReStart_TON.Q);
			IF rTrigHold.Q THEN
				Hold_TON(IN:=FALSE);
				Hold_On := FALSE;
				Ramp_On := TRUE;
				IF nRcpIndex < Rcp.iRcpTotalStep THEN
					nRcpIndex := nRcpIndex + 1;
					RCP.cmd_RcpOperation := 10;
				ELSE 
					RCP.cmd_RcpOperation := 50;
				END_IF
				ReStart_TON(IN:=FALSE);
			END_IF
		END_IF
		GVL_IO.nCaseSignalTower := 3;
		fbRecipeSequencer();
		
	40: //STOP
		Rcp.state_RcpOperation := 40;
		Pause_TON(IN:=FALSE);
		ReStart_TON(IN:=FALSE);
		Rcp.userState := 40;
		GVL_IO.nCaseSignalTower := 5;
		fbRecipeSequencer();
		
	50: //END
		Rcp.state_RcpOperation := 50;
		Rcp.userState := 50;
		fbRecipeSequencer(nRcpIndex := nRcpIndex);
		GVL_IO.nCaseSignalTower := 5;
		fbRecipeSequencer();
		
	60:
		IF E_RecipeRun.Ramp <= eRecipeRun  AND  eRecipeRun <= E_RecipeRun.CheckHoldTemp THEN
			eRecipeRun := E_RecipeRun.End;
		END_IF
		Rcp.cmd_RcpOperation := 10;
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="P50_RecipeControl">
      <LineId Id="1" Count="10" />
      <LineId Id="227" Count="3" />
      <LineId Id="13" Count="1" />
      <LineId Id="249" Count="0" />
      <LineId Id="21" Count="2" />
      <LineId Id="25" Count="1" />
      <LineId Id="34" Count="0" />
      <LineId Id="39" Count="4" />
      <LineId Id="45" Count="0" />
      <LineId Id="251" Count="1" />
      <LineId Id="264" Count="0" />
      <LineId Id="257" Count="2" />
      <LineId Id="256" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="46" Count="7" />
      <LineId Id="55" Count="0" />
      <LineId Id="62" Count="14" />
      <LineId Id="261" Count="0" />
      <LineId Id="78" Count="1" />
      <LineId Id="265" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="245" Count="2" />
      <LineId Id="250" Count="0" />
      <LineId Id="116" Count="88" />
      <LineId Id="266" Count="1" />
      <LineId Id="270" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="224" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>