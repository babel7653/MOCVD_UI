<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.12">
  <POU Name="P50_RecipeControl" Id="{e332a806-fd31-4290-a7c3-27f42c11d38e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P50_RecipeControl
VAR
	nRcpIndex		: INT;
	nRcpStepTime 	: INT;
	fbRecipeSequencer : FB_RecipeSequencer;
	Pause_TIME		: TIME;
	Pause_ET		: TIME;
	Pause_MAX		: TIME := T#1800S;
	Pause_Step		: INT;
	Pause_TON		: TON;
	Pause_rTrig		: R_TRIG;
	Pause_Ramp		: BOOL;
	Pause_Hold		: BOOL;
	ReStart_TON		: TON;
	Ramp_TON		: TON;
	Hold_TON		: TON;
	Ramp_TIME		: TIME;
	Hold_TIME		: TIME;
	Ramp_ET			: TIME;
	Hold_ET			: TIME;
	rTrigRamp		: R_TRIG;
	rTrigHold		: R_TRIG;
	rTrigLoop		: R_TRIG;
	rTrigWait		: R_TRIG;
	Ramp_On			: BOOL;
	Hold_On			: BOOL;
	Loop_On			: BOOL;
	Wait_On			: BOOL;

	i				: INT;
	test_temp		: INT; //GVL_IO.aMonitoring_PV[10]
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE RCP.cmd_RcpOperation OF
	0: //Init State
		Rcp.state_RcpOperation := 0;
		nRcpIndex := 0;
		Pause_TON(IN:=FALSE);
		ReStart_TON(IN:=FALSE);
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		Ramp_On := TRUE;
		Hold_On	:= FALSE;
		Loop_On := FALSE;
		Rcp.userState := 0;
		FOR i :=1 TO 4 DO 
			Rcp.aLoop[i] := -1;
		END_FOR
		P92_Maintenance.nCaseSignalTower := 3; // Blue - Idle

	10: //RUN
		IF nRcpIndex = 0 THEN
			nRcpIndex := 1;
		ELSIF nRcpIndex > Rcp.iRcpTotalStep THEN
			RCP.cmd_RcpOperation := 50;
			P92_Maintenance.nCaseSignalTower := 3; // Blue - Idle
		END_IF

		Rcp.userState := 10;
		IF nRcpIndex <= Rcp.iRcpTotalStep THEN
			Rcp.state_RcpOperation := 10; // Recipe Running
			Ramp_TIME := INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[2]*1000); // second -> milisecond time
			Hold_TIME := INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[3]*1000);
			fbRecipeSequencer(nRcpIndex := nRcpIndex);
			
			//Ramp Operation
			Ramp_TON(IN:=Ramp_On, PT:=Ramp_TIME, ET=>Ramp_ET);
			rTrigRamp(CLK:=Ramp_TON.Q);
			IF rTrigRamp.Q THEN
				Ramp_TON(IN:=FALSE);
				Ramp_On := FALSE;
				Hold_On := TRUE;
				Wait_On := TRUE;
				Loop_On := FALSE;
			END_IF
			
			//Hold Operation
			IF RCP.aRecipe[nRcpIndex].iRecipe[7] = 0 THEN // Time Hold Mode
				Hold_TON(IN:=Hold_On, PT:=Hold_TIME, ET=>Hold_ET);
				rTrigHold(CLK:=Hold_TON.Q);
				IF rTrigHold.Q THEN
					Hold_TON(IN:=FALSE);
					//Ramp_On := FALSE;
					Hold_On := FALSE;
					Wait_On := FALSE;
					Loop_On := TRUE;
				END_IF
			ELSIF test_temp < RCP.aRecipe[nRcpIndex].iRecipe[7] THEN	
				rTrigWait(CLK:= Wait_On);
				IF rTrigWait.Q THEN
					rTrigWait(CLK:=FALSE);
					//Ramp_On := FALSE;
					Hold_On := FALSE;
					Wait_On := FALSE;
					Loop_On := TRUE;
				END_IF

			ELSE
				rTrigWait(CLK:=FALSE);
				//Ramp_On := FALSE;
				Hold_On := FALSE;
				Wait_On := TRUE;
				Loop_On := FALSE;
			END_IF
			
			//Loop Operation
			rTrigLoop(CLK:=Loop_On);
			IF rTrigLoop.Q THEN
				Ramp_On := TRUE;
				IF RCP.aRecipe[nRcpIndex].iRecipe[8] <> 0 AND RCP.aRecipe[nRcpIndex].iRecipe[9] <> 0 THEN
					Rcp.aLoop[1] := RCP.aRecipe[nRcpIndex].iRecipe[8]; 		// Rcp.aLoop[1]: loop repeat number
					Rcp.aLoop[4] := RCP.aRecipe[nRcpIndex].iRecipe[9]; 		// Rcp.aLoop[4]: loop end
					Rcp.aLoop[3] := nRcpIndex; 								// Rcp.aLoop[3]: loop bigin
				END_IF
				IF Rcp.aLoop[2] < (Rcp.aLoop[1] - 2) THEN					// Rcp.aLoop[2]: current loop count
					IF nRcpIndex < Rcp.aLoop[4] THEN
						nRcpIndex := nRcpIndex + 1;
					ELSE
						Rcp.aLoop[2] := Rcp.aLoop[2] + 1;
						nRcpIndex := Rcp.aLoop[3];
					END_IF
				ELSE
					FOR i :=1 TO 4 DO 
					Rcp.aLoop[i] := -1;
					END_FOR
					nRcpIndex := nRcpIndex + 1; // Next Recipe Step
				END_IF
			END_IF		
			P92_Maintenance.nCaseSignalTower := 3;
		ELSE
			FOR i :=1 TO 4 DO 
				Rcp.aLoop[i] := -1;
			END_FOR
			RCP.cmd_RcpOperation := 50;
			P92_Maintenance.nCaseSignalTower := 4;
		END_IF
		
	20: //PAUSE
		Rcp.state_RcpOperation := 20;
		
		IF Ramp_On THEN
 			Pause_TIME := Ramp_ET;
			Pause_Ramp := TRUE;
			Pause_Hold := FALSE;
		ELSE
			Pause_TIME := Hold_ET;
			Pause_Ramp := FALSE;
			Pause_Hold := TRUE;
 		END_IF
		
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		
		Pause_TON(IN:=TRUE, PT:= Pause_MAX, ET=> Pause_ET);
		Pause_rTrig(CLK:=Pause_TON.Q);
		IF Pause_rTrig.Q THEN
			Rcp.state_RcpOperation := 90; // Recipe_Alarm
			Pause_TON(IN:=FALSE);
		END_IF	
		Pause_Step := nRcpIndex;
		Rcp.userState := 20;
		P92_Maintenance.nCaseSignalTower := 4;
		
	30: //RESTART
		Rcp.state_RcpOperation := 30;	
		Pause_TON(IN:=FALSE);
		Rcp.userState := 10;
		IF Pause_Ramp THEN
			ReStart_TON(IN:=TRUE, PT:=Ramp_TIME - Pause_TIME, ET=>Ramp_ET);
			rTrigRamp(CLK:=ReStart_TON.Q);
			IF rTrigRamp.Q THEN
				Ramp_TON(IN:=FALSE);
				Ramp_On := FALSE;
				Hold_On := TRUE;
			END_IF
			
			Hold_TON(IN:=Hold_On, PT:=Hold_TIME, ET=>Hold_ET);
			rTrigHold(CLK:=Hold_TON.Q);
			IF rTrigHold.Q THEN
				Hold_TON(IN:=FALSE);
				Hold_On := FALSE;
				Ramp_On := TRUE;
				IF nRcpIndex < Rcp.iRcpTotalStep THEN
					nRcpIndex := nRcpIndex + 1;
					RCP.cmd_RcpOperation := 10;
				ELSE 
					RCP.cmd_RcpOperation := 50;
				END_IF
			END_IF
			
		ELSIF Pause_Hold THEN
			ReStart_TON(IN:=TRUE, PT:=Hold_TIME - Pause_TIME, ET=>Hold_ET);
			rTrigHold(CLK:=ReStart_TON.Q);
			IF rTrigHold.Q THEN
				Hold_TON(IN:=FALSE);
				Hold_On := FALSE;
				Ramp_On := TRUE;
				IF nRcpIndex < Rcp.iRcpTotalStep THEN
					nRcpIndex := nRcpIndex + 1;
					RCP.cmd_RcpOperation := 10;
				ELSE 
					RCP.cmd_RcpOperation := 50;
				END_IF
				ReStart_TON(IN:=FALSE);
			END_IF
		END_IF
		P92_Maintenance.nCaseSignalTower := 3;
		fbRecipeSequencer();
		
	40: //STOP
		Rcp.state_RcpOperation := 40;
		Pause_TON(IN:=FALSE);
		ReStart_TON(IN:=FALSE);
		Rcp.userState := 40;
		P92_Maintenance.nCaseSignalTower := 4;
		fbRecipeSequencer();
		
	50: //END
		Rcp.state_RcpOperation := 50;
		Rcp.userState := 50;
		fbRecipeSequencer(nRcpIndex := nRcpIndex);
		P92_Maintenance.nCaseSignalTower := 4;
		fbRecipeSequencer();
		
	60: //SKIP
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		Ramp_On := TRUE;
		Hold_On := FALSE;
		nRcpIndex := nRcpIndex + 1;
		RCP.cmd_RcpOperation := 10;
		fbRecipeSequencer();
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="P50_RecipeControl">
      <LineId Id="1" Count="75" />
      <LineId Id="79" Count="124" />
    </LineIds>
  </POU>
</TcPlcObject>