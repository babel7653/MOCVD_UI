<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.12">
  <POU Name="P50_RecipeControl" Id="{e332a806-fd31-4290-a7c3-27f42c11d38e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P50_RecipeControl
VAR
	nRcpIndex		: INT;
	nRcpStepTime 	: INT;
	fbRecipeSequencer : FB_RecipeSequencer;
	Pause_TIME		: TIME;
	Pause_ET		: TIME;
	Pause_MAX		: TIME := T#1800S;
	Pause_Step		: INT;
	Pause_TON		: TON;
	Pause_rTrig		: R_TRIG;
	Pause_Ramp		: BOOL;
	Pause_Hold		: BOOL;
	ReStart_TON		: TON;
	Ramp_TON		: TON;
	Hold_TON		: TON;
	Ramp_TIME		: TIME;
	Hold_TIME		: TIME;
	Ramp_ET			: TIME;
	Hold_ET			: TIME;
	rTrigRamp		: R_TRIG;
	rTrigHold		: R_TRIG;
	rTrigLoop		: R_TRIG;
	rTrigWait		: R_TRIG;
	Ramp_On			: BOOL;
	Hold_On			: BOOL;
	Loop_On			: BOOL;
	Wait_On			: BOOL;
	bIngLoop		: BOOL;

	i				: INT;
	test_temp		: INT; //GVL_IO.aMonitoring_PV[10]
	eRecipeRun		: E_RecipeRun := E_RecipeRun.Idle; //레시피 상태
	k1 : INT;
	k2 : INT;
	k3 : INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE RCP.cmd_RcpOperation OF
	0: //Init State
		Rcp.state_RcpOperation := 0;
		nRcpIndex := 0;
		Pause_TON(IN:=FALSE);
		ReStart_TON(IN:=FALSE);
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		Ramp_On := TRUE;
		Hold_On	:= FALSE;
		Loop_On := FALSE;
		bIngLoop := FALSE;
		
		Rcp.userState := 0;
		FOR i :=1 TO 6 DO 
			Rcp.aLoop[i] := -1;
		END_FOR
		GVL_IO.nCaseSignalTower := 3; // Blue - Idle
		k1 := 0;
		k2 := 0;
		k3 := 0;

	10: //RUN
		IF nRcpIndex = 0 THEN
			nRcpIndex := 1;
			eRecipeRun := E_RecipeRun.Ramp; // 레시피 첫 Column 실행
		ELSIF nRcpIndex > Rcp.iRcpTotalStep THEN
			RCP.cmd_RcpOperation := 50;
			GVL_IO.nCaseSignalTower := 3; // Blue - Idle
		END_IF
		
		Rcp.userState := 10;
		IF nRcpIndex <= Rcp.iRcpTotalStep THEN
			Rcp.state_RcpOperation := 10; // Recipe Running
			Ramp_TIME := INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[2]*1000); // second -> milisecond time
			Hold_TIME := INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[3]*1000);
			fbRecipeSequencer(nRcpIndex := nRcpIndex);
						
			// CASE 문을 이용한 상태 머신 구현
			CASE eRecipeRun OF
				E_RecipeRun.Idle:
					// 아무것도 하지 않음			
					;
				E_RecipeRun.Ramp: // Ramp 수행
					Ramp_TON(IN:=TRUE, PT:=Ramp_TIME, ET=>Ramp_ET);
					rTrigRamp(CLK:=Ramp_TON.Q);
					IF rTrigRamp.Q THEN
						Ramp_TON(IN:=FALSE);
						//Ramp_On := FALSE;
						//Hold_On	:= TRUE;
						eRecipeRun := E_RecipeRun.CheckHoldTemp;
						k3 := k3 + 1;
					END_IF
					IF RCP.aRecipe[nRcpIndex].iRecipe[8] > 0 AND bIngLoop = FALSE THEN
						RCP.aLoop[1] := 1; // Current Loop Count
						RCP.aLoop[2] := RCP.aRecipe[nRcpIndex].iRecipe[8]; // Total Loop Number
						RCP.aLoop[3] := nRcpIndex; // Start Step
						RCP.aLoop[4] := RCP.aRecipe[nRcpIndex].iRecipe[9]; // Loop End Step
						bIngLoop := TRUE;
					END_IF
					
				E_RecipeRun.CheckHoldTemp: //Hold Temp 확인
					IF RCP.aRecipe[nRcpIndex].iRecipe[7] = 0 THEN
						Hold_TON(IN:=TRUE, PT:=Hold_TIME, ET=>Hold_ET);
						rTrigHold(CLK:=Hold_TON.Q);
						IF rTrigHold.Q THEN
							Hold_TON(IN:=FALSE);
							eRecipeRun := E_RecipeRun.CheckLoop; // 레시피 첫 Column 실행
						END_IF
					ELSIF GVL_IO.aController_PV[27] < RCP.aRecipe[nRcpIndex].iRecipe[7] THEN //서셉터 온도가 Wait 온도보다 낮을 때
						Hold_TON(IN:=FALSE);
						eRecipeRun := E_RecipeRun.CheckLoop; // 레시피 첫 Column 실행
					ELSE // 서셉터 온도가 Wait 온도보다 높을 때
						;// 떨어질 때까지 기다림
					END_IF
					
				E_RecipeRun.CheckLoop: //Loop 확인
					IF RCP.aRecipe[nRcpIndex].iRecipe[8] = 0 AND bIngLoop = FALSE THEN // Loop Mode 아닐때
						nRcpIndex := nRcpIndex + 1;
						eRecipeRun := E_RecipeRun.Ramp;
					ELSIF RCP.aRecipe[nRcpIndex].iRecipe[8] > 0 AND bIngLoop = FALSE THEN //Loop Mode 시작일 때
						bIngLoop := TRUE;
					ELSE
						eRecipeRun := E_RecipeRun.CheckRepeatOrNext;
					END_IF

				
				E_RecipeRun.CheckRepeatOrNext:
					IF nRcpIndex < RCP.aLoop[4] THEN
						nRcpIndex := nRcpIndex + 1;
						eRecipeRun := E_RecipeRun.Ramp;
						k3 := k3 +1;					
					ELSE
						IF RCP.aLoop[1] < RCP.aLoop[2] THEN //반복 횟수가 작으면
							RCP.aLoop[1] := RCP.aLoop[1] + 1; //반복 카운트 증가
							nRcpIndex := RCP.aLoop[3]; //반복 시작 스텝
							eRecipeRun := E_RecipeRun.Ramp;
							k1 := k1 +1;
						ELSE
							eRecipeRun := E_RecipeRun.LoopFinish;
							k2 := k2 +1;							
						END_IF
					END_IF
					
				E_RecipeRun.LoopFinish:
					nRcpIndex := nRcpIndex + 1;
					bIngLoop := FALSE;
					eRecipeRun := E_RecipeRun.Ramp;
					FOR i :=1 TO 6 DO 
						RCP.aLoop[i] := -1;
					END_FOR	
			END_CASE
			
		ELSE
			FOR i :=1 TO 6 DO 
				RCP.aLoop[i] := -1;
			END_FOR
			RCP.cmd_RcpOperation := 50;
			GVL_IO.nCaseSignalTower := 4;
		END_IF
		
	20: //PAUSE
		Rcp.state_RcpOperation := 20;
		
		IF Ramp_On THEN
 			Pause_TIME := Ramp_ET;
			Pause_Ramp := TRUE;
			Pause_Hold := FALSE;
		ELSE
			Pause_TIME := Hold_ET;
			Pause_Ramp := FALSE;
			Pause_Hold := TRUE;
 		END_IF
		
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		
		Pause_TON(IN:=TRUE, PT:= Pause_MAX, ET=> Pause_ET);
		Pause_rTrig(CLK:=Pause_TON.Q);
		IF Pause_rTrig.Q THEN
			Rcp.state_RcpOperation := 90; // Recipe_Alarm
			Pause_TON(IN:=FALSE);
		END_IF	
		Pause_Step := nRcpIndex;
		Rcp.userState := 20;
		GVL_IO.nCaseSignalTower := 4;
		
	30: //RESTART
		Rcp.state_RcpOperation := 30;	
		Pause_TON(IN:=FALSE);
		Rcp.userState := 10;
		IF Pause_Ramp THEN
			ReStart_TON(IN:=TRUE, PT:=Ramp_TIME - Pause_TIME, ET=>Ramp_ET);
			rTrigRamp(CLK:=ReStart_TON.Q);
			IF rTrigRamp.Q THEN
				Ramp_TON(IN:=FALSE);
				Ramp_On := FALSE;
				Hold_On := TRUE;
			END_IF
			
			Hold_TON(IN:=Hold_On, PT:=Hold_TIME, ET=>Hold_ET);
			rTrigHold(CLK:=Hold_TON.Q);
			IF rTrigHold.Q THEN
				Hold_TON(IN:=FALSE);
				Hold_On := FALSE;
				Ramp_On := TRUE;
				IF nRcpIndex < Rcp.iRcpTotalStep THEN
					nRcpIndex := nRcpIndex + 1;
					RCP.cmd_RcpOperation := 10;
				ELSE 
					RCP.cmd_RcpOperation := 50;
				END_IF
			END_IF
			
		ELSIF Pause_Hold THEN
			ReStart_TON(IN:=TRUE, PT:=Hold_TIME - Pause_TIME, ET=>Hold_ET);
			rTrigHold(CLK:=ReStart_TON.Q);
			IF rTrigHold.Q THEN
				Hold_TON(IN:=FALSE);
				Hold_On := FALSE;
				Ramp_On := TRUE;
				IF nRcpIndex < Rcp.iRcpTotalStep THEN
					nRcpIndex := nRcpIndex + 1;
					RCP.cmd_RcpOperation := 10;
				ELSE 
					RCP.cmd_RcpOperation := 50;
				END_IF
				ReStart_TON(IN:=FALSE);
			END_IF
		END_IF
		GVL_IO.nCaseSignalTower := 3;
		fbRecipeSequencer();
		
	40: //STOP
		Rcp.state_RcpOperation := 40;
		Pause_TON(IN:=FALSE);
		ReStart_TON(IN:=FALSE);
		Rcp.userState := 40;
		GVL_IO.nCaseSignalTower := 4;
		fbRecipeSequencer();
		
	50: //END
		Rcp.state_RcpOperation := 50;
		Rcp.userState := 50;
		fbRecipeSequencer(nRcpIndex := nRcpIndex);
		GVL_IO.nCaseSignalTower := 4;
		fbRecipeSequencer();
		
	60: //SKIP
		Ramp_TON(IN:=FALSE);
		Hold_TON(IN:=FALSE);
		Ramp_On := TRUE;
		Hold_On := FALSE;
		IF nRcpIndex = RCP.aLoop[4] THEN
			IF RCP.aLoop[1] < RCP.aLoop[2] THEN
				RCP.aLoop[1] := RCP.aLoop[1] + 1;
				nRcpIndex := RCP.aLoop[3];
			ELSE
				nRcpIndex := nRcpIndex + 1;
			END_IF
		ELSE
			nRcpIndex := nRcpIndex + 1;
		END_IF

		RCP.cmd_RcpOperation := 10;
		fbRecipeSequencer();
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="P50_RecipeControl">
      <LineId Id="1" Count="10" />
      <LineId Id="454" Count="1" />
      <LineId Id="12" Count="4" />
      <LineId Id="493" Count="2" />
      <LineId Id="17" Count="3" />
      <LineId Id="410" Count="0" />
      <LineId Id="21" Count="3" />
      <LineId Id="372" Count="0" />
      <LineId Id="26" Count="4" />
      <LineId Id="509" Count="0" />
      <LineId Id="385" Count="0" />
      <LineId Id="403" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="373" Count="0" />
      <LineId Id="370" Count="0" />
      <LineId Id="375" Count="2" />
      <LineId Id="380" Count="2" />
      <LineId Id="408" Count="0" />
      <LineId Id="396" Count="0" />
      <LineId Id="383" Count="0" />
      <LineId Id="407" Count="0" />
      <LineId Id="384" Count="0" />
      <LineId Id="521" Count="0" />
      <LineId Id="528" Count="2" />
      <LineId Id="522" Count="0" />
      <LineId Id="524" Count="0" />
      <LineId Id="523" Count="0" />
      <LineId Id="404" Count="0" />
      <LineId Id="386" Count="0" />
      <LineId Id="378" Count="0" />
      <LineId Id="390" Count="1" />
      <LineId Id="421" Count="0" />
      <LineId Id="428" Count="0" />
      <LineId Id="424" Count="0" />
      <LineId Id="423" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="433" Count="0" />
      <LineId Id="432" Count="0" />
      <LineId Id="426" Count="0" />
      <LineId Id="425" Count="0" />
      <LineId Id="395" Count="0" />
      <LineId Id="444" Count="0" />
      <LineId Id="437" Count="0" />
      <LineId Id="443" Count="0" />
      <LineId Id="446" Count="0" />
      <LineId Id="445" Count="0" />
      <LineId Id="447" Count="0" />
      <LineId Id="510" Count="0" />
      <LineId Id="452" Count="1" />
      <LineId Id="389" Count="0" />
      <LineId Id="470" Count="0" />
      <LineId Id="468" Count="0" />
      <LineId Id="471" Count="0" />
      <LineId Id="474" Count="0" />
      <LineId Id="499" Count="1" />
      <LineId Id="498" Count="0" />
      <LineId Id="486" Count="0" />
      <LineId Id="501" Count="7" />
      <LineId Id="492" Count="0" />
      <LineId Id="469" Count="0" />
      <LineId Id="489" Count="0" />
      <LineId Id="481" Count="1" />
      <LineId Id="497" Count="0" />
      <LineId Id="484" Count="0" />
      <LineId Id="526" Count="1" />
      <LineId Id="496" Count="0" />
      <LineId Id="371" Count="0" />
      <LineId Id="104" Count="100" />
      <LineId Id="272" Count="0" />
      <LineId Id="281" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="285" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="286" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="287" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="206" Count="3" />
    </LineIds>
  </POU>
</TcPlcObject>