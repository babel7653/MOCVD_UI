<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="P50_RecipeControl" Id="{e332a806-fd31-4290-a7c3-27f42c11d38e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P50_RecipeControl
VAR
	nRcpIndex		: INT;
	eRecipeRun		: E_RecipeRun ; //레시피 상태
	fbRecipeSequencer : FB_RecipeSequencer;
	
	Pause_TON		: TON;
	Ramp_TON		: FB_TON_Pausable;
	Hold_TON		: FB_TON_Pausable;
	
	loopCount		: ARRAY[1..100] OF INT;
	i				: INT;
END_VAR
VAR CONSTANT
	Pause_MAX		: TIME := T#1800S;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE RCP.cmd_RcpOperation OF
	0: //Init State
 		f_ResetTimersAndRCPTimes(fbPause_TON := Pause_TON, fbRamp_TON := Ramp_TON, fbHold_TON := Hold_TON);
		
		FOR i:=1 TO Rcp.iRcpTotalStep DO
			loopCount[i] := Rcp.aRecipe[i].iRecipe[9];
		END_FOR
		
		nRcpIndex := 0;
		Rcp.userState := 0;
		eRecipeRun := E_RecipeRun.Initial;
		GVL_IO.nCaseSignalTower := 5; // White - Idle

	10: //RUN
		IF nRcpIndex = 0 THEN
			nRcpIndex := 1;
		END_IF
		fbRecipeSequencer(nRcpIndex := nRcpIndex);
						
		// CASE 문을 이용한 상태 머신 구현
		CASE eRecipeRun OF
			E_RecipeRun.Initial:
				f_ResetTimersAndRCPTimes(fbPause_TON := Pause_TON, fbRamp_TON := Ramp_TON, fbHold_TON := Hold_TON);
				Rcp.userState := 10;// Recipe Running
				GVL_IO.nCaseSignalTower := 3;
				eRecipeRun := E_RecipeRun.Ramp;
				
			E_RecipeRun.Ramp: // Ramp 수행
				Ramp_TON(IN:=TRUE, PT:=INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[2]*1000), ET=>RCP.RecipeRunET.ET);
				RCP.RecipeRunET.Mode := E_RecipeRunETMode.Ramp;
				IF Ramp_TON.Q THEN
					Ramp_TON(IN:=FALSE);
					eRecipeRun := E_RecipeRun.CheckHoldTemp;
				END_IF				
				
			E_RecipeRun.CheckHoldTemp: //Hold Temp 확인
				IF RCP.aRecipe[nRcpIndex].iRecipe[7] = 0 THEN
					Hold_TON(IN:=TRUE, PT:=INT_TO_TIME(RCP.aRecipe[nRcpIndex].iRecipe[3]*1000), ET=>RCP.RecipeRunET.ET);
					RCP.RecipeRunET.Mode := E_RecipeRunETMode.Hold;
					IF Hold_TON.Q THEN
						Hold_TON(IN:=FALSE);
						eRecipeRun := E_RecipeRun.End; // 레시피 첫 Column 실행
					END_IF
				ELSIF GVL_IO.aController_PV[27] < RCP.aRecipe[nRcpIndex].iRecipe[7] THEN //서셉터 온도가 Wait 온도보다 낮을 때
					Hold_TON(IN:=FALSE);
					eRecipeRun := E_RecipeRun.End; // 레시피 첫 Column 실행
				ELSE // 서셉터 온도가 Wait 온도보다 높을 때
					;// 떨어질 때까지 기다림
				END_IF
				
			E_RecipeRun.End: // 다음 Step 이동 (루프 마지막 단계일 경우, 다음 Step 이동 또는 루프 처음단계로 점프)
				loopCount[nRcpIndex] := loopCount[nRcpIndex] - 1;
				nRcpIndex := nRcpIndex + 1 - (RCP.aRecipe[nRcpIndex].iRecipe[8]) * MIN(loopCount[nRcpIndex], 1);
				IF nRcpIndex > Rcp.iRcpTotalStep THEN
					RCP.cmd_RcpOperation := 50;
				END_IF
				eRecipeRun := E_RecipeRun.Initial;
		END_CASE
		
	20: //PAUSE
		CASE eRecipeRun OF
			E_RecipeRun.Ramp:
				Ramp_TON(PAUSE:=TRUE);		
			E_RecipeRun.CheckHoldTemp:
				Hold_TON(PAUSE:=TRUE);
		END_CASE
		
		Pause_TON(IN:=TRUE, PT:= Pause_MAX, ET=>RCP.Pause_ET); //최대 홀드 시간이 지나면 다음 스텝으로 넘거감
		IF Pause_TON.Q THEN
			Pause_TON(IN:=FALSE);
			eRecipeRun := E_RecipeRun.End; // 레시피 첫 Column 실행
		END_IF

		Rcp.userState := 20;
		GVL_IO.nCaseSignalTower := 5;
		
	30: //RESTART
		Pause_TON(IN:=FALSE);
		CASE eRecipeRun OF
			E_RecipeRun.Ramp:
				Ramp_TON(PAUSE:=FALSE);
			
			E_RecipeRun.CheckHoldTemp:
				Hold_TON(PAUSE:=FALSE);
		END_CASE

		RCP.Pause_ET := T#0S;
		Rcp.userState := 10;
		RCP.cmd_RcpOperation := 10;	
		GVL_IO.nCaseSignalTower := 3;
		
	40: //STOP
		f_ResetTimersAndRCPTimes(fbPause_TON := Pause_TON, fbRamp_TON := Ramp_TON, fbHold_TON := Hold_TON);
		Rcp.userState := 40;
		GVL_IO.nCaseSignalTower := 5;
		
	50: //END
		f_ResetTimersAndRCPTimes(fbPause_TON := Pause_TON, fbRamp_TON := Ramp_TON, fbHold_TON := Hold_TON);
		Rcp.userState := 50;
		fbRecipeSequencer(nRcpIndex := nRcpIndex);
		GVL_IO.nCaseSignalTower := 5;
		
	60: //SKIP
		IF E_RecipeRun.Ramp <= eRecipeRun  AND  eRecipeRun <= E_RecipeRun.CheckHoldTemp THEN
			eRecipeRun := E_RecipeRun.End;
		END_IF
		Rcp.cmd_RcpOperation := 10;
		RCP.Pause_ET := T#0S;
END_CASE
RCP.iRcpStepN := nRcpIndex;]]></ST>
    </Implementation>
    <LineIds Name="P50_RecipeControl">
      <LineId Id="1" Count="28" />
      <LineId Id="110" Count="0" />
      <LineId Id="30" Count="7" />
      <LineId Id="112" Count="0" />
      <LineId Id="38" Count="4" />
      <LineId Id="117" Count="0" />
      <LineId Id="44" Count="64" />
    </LineIds>
  </POU>
</TcPlcObject>